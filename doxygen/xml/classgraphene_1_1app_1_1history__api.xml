<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1app_1_1history__api" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::history_api</compoundname>
    <includes refid="api_8hpp" local="no">api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1history__api_1a59a2a38b1c81a9e5fed85ea79f25bc38" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
        <definition>application&amp; graphene::app::history_api::_app</definition>
        <argsstring></argsstring>
        <name>_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="218" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1history__api_1af5bed60211b4dbc03bd69cfee1448848" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">graphene::app::database_api</ref></type>
        <definition>graphene::app::database_api graphene::app::history_api::database_api</definition>
        <argsstring></argsstring>
        <name>database_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="219" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1ad034d3e3420e431ad72159b9f3bd807a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::app::history_api::history_api</definition>
        <argsstring>(application &amp;app)</argsstring>
        <name>history_api</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="119" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="119" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1a70b3af7edeea81534a4db9e83b2cbd88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref> &gt;</type>
        <definition>vector&lt; operation_history_object &gt; graphene::app::history_api::get_account_history</definition>
        <argsstring>(const std::string account_id_or_name, operation_history_id_type stop=operation_history_id_type(), unsigned limit=100, operation_history_id_type start=operation_history_id_type()) const</argsstring>
        <name>get_account_history</name>
        <param>
          <type>const std::string</type>
          <declname>account_id_or_name</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref></type>
          <declname>stop</declname>
          <defval><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref>()</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>limit</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref></type>
          <declname>start</declname>
          <defval><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref>()</defval>
        </param>
        <briefdescription>
<para>Get operations relevant to the specificed account. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_id_or_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The account ID or name whose history should be queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the earliest operation to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of operations to retrieve (must not exceed 100) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the most recent operation to retrieve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of operations performed by account, ordered from most recent to oldest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="130" column="1" bodyfile="libraries/app/api.cpp" bodystart="311" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1aa089e3b3c533e4f195c6af5c230c8a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1app_1_1history__operation__detail" kindref="compound">history_operation_detail</ref></type>
        <definition>history_operation_detail graphene::app::history_api::get_account_history_by_operations</definition>
        <argsstring>(const std::string account_id_or_name, vector&lt; uint16_t &gt; operation_types, uint32_t start, unsigned limit)</argsstring>
        <name>get_account_history_by_operations</name>
        <param>
          <type>const std::string</type>
          <declname>account_id_or_name</declname>
        </param>
        <param>
          <type>vector&lt; uint16_t &gt;</type>
          <declname>operation_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Get operations relevant to the specified account filtering by operation type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_id_or_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The account ID or name whose history should be queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation_types</parametername>
</parameternamelist>
<parameterdescription>
<para>The IDs of the operation we want to get operations in the account ( 0 = transfer , 1 = limit order create, ...) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequence number where to start looping back throw the history </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>the max number of entries to return (from start number) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structgraphene_1_1app_1_1history__operation__detail" kindref="compound">history_operation_detail</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="146" column="1" bodyfile="libraries/app/api.cpp" bodystart="430" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1a67e565b2a56a736c31215fb96d216fc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref> &gt;</type>
        <definition>vector&lt; operation_history_object &gt; graphene::app::history_api::get_account_history_operations</definition>
        <argsstring>(const std::string account_id_or_name, int operation_id, operation_history_id_type start=operation_history_id_type(), operation_history_id_type stop=operation_history_id_type(), unsigned limit=100) const</argsstring>
        <name>get_account_history_operations</name>
        <param>
          <type>const std::string</type>
          <declname>account_id_or_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>operation_id</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref></type>
          <declname>start</declname>
          <defval><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref></type>
          <declname>stop</declname>
          <defval><ref refid="namespacegraphene_1_1chain_1ac95699e79dcc01de0d506840c1b7feb4" kindref="member">operation_history_id_type</ref>()</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>limit</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para>Get only asked operations relevant to the specified account. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_id_or_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The account ID or name whose history should be queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the operation we want to get operations in the account ( 0 = transfer , 1 = limit order create, ...) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the earliest operation to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of operations to retrieve (must not exceed 100) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the most recent operation to retrieve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of operations performed by account, ordered from most recent to oldest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="163" column="1" bodyfile="libraries/app/api.cpp" bodystart="346" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1aeed223d6c126ffd0b2a388ae3e026a90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref> &gt;</type>
        <definition>vector&lt; operation_history_object &gt; graphene::app::history_api::get_relative_account_history</definition>
        <argsstring>(const std::string account_id_or_name, uint64_t stop=0, unsigned limit=100, uint64_t start=0) const</argsstring>
        <name>get_relative_account_history</name>
        <param>
          <type>const std::string</type>
          <declname>account_id_or_name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>stop</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>limit</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get operations relevant to the specified account referenced by an event numbering specific to the account. The current number of operations for the account can be found in the account statistics (or use 0 for start). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_id_or_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The account ID or name whose history should be queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence number of earliest operation. 0 is default and will query &apos;limit&apos; number of operations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of operations to retrieve (must not exceed 100) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence number of the most recent operation to retrieve. 0 is default, which will start querying from the most recent operation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of operations performed by account, ordered from most recent to oldest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="183" column="1" bodyfile="libraries/app/api.cpp" bodystart="386" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1a1574597fa10804bf328b89c12f6f7a9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; order_history_object &gt;</type>
        <definition>vector&lt; order_history_object &gt; graphene::app::history_api::get_fill_order_history</definition>
        <argsstring>(asset_id_type a, asset_id_type b, uint32_t limit) const</argsstring>
        <name>get_fill_order_history</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Get details of order executions occurred most recently in a trading pair. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>One asset in a trading pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The other asset in the trading pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum records to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of order_history objects, in &quot;most recent first&quot; order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="195" column="1" bodyfile="libraries/app/api.cpp" bodystart="286" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1ab5e379a09632a3e215554cd9ef37dcd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; bucket_object &gt;</type>
        <definition>vector&lt; bucket_object &gt; graphene::app::history_api::get_market_history</definition>
        <argsstring>(asset_id_type a, asset_id_type b, uint32_t bucket_seconds, fc::time_point_sec start, fc::time_point_sec end) const</argsstring>
        <name>get_market_history</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a8719a403aa47e9d369890c01d60d0bb2" kindref="member">asset_id_type</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bucket_seconds</declname>
        </param>
        <param>
          <type>fc::time_point_sec</type>
          <declname>start</declname>
        </param>
        <param>
          <type>fc::time_point_sec</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Get OHLCV data of a trading pair in a time range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>One asset in a trading pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The other asset in the trading pair </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bucket_seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of each time bucket in seconds. Note: it need to be within result of <ref refid="classgraphene_1_1app_1_1history__api_1a3cb82a7bb879b9f967665d69fd90c67d" kindref="member">get_market_history_buckets()</ref> API, otherwise no data will be returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of a time range, E.G. &quot;2018-01-01T00:00:00&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the time range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of OHLCV data, in &quot;least recent first&quot; order. If there are more than 200 records in the specified time range, the first 200 records will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="208" column="1" bodyfile="libraries/app/api.cpp" bodystart="445" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1history__api_1a3cb82a7bb879b9f967665d69fd90c67d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>flat_set&lt; uint32_t &gt;</type>
        <definition>flat_set&lt; uint32_t &gt; graphene::app::history_api::get_market_history_buckets</definition>
        <argsstring>() const</argsstring>
        <name>get_market_history_buckets</name>
        <briefdescription>
<para>Get OHLCV time bucket lengths supported (configured) by this API server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of time bucket lengths in seconds. E.G. if the result contains a number &quot;300&quot;, it means this API server supports OHLCV data aggregated in 5-minute buckets. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="216" column="1" bodyfile="libraries/app/api.cpp" bodystart="423" bodyend="428"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classgraphene_1_1app_1_1history__api" kindref="compound">history_api</ref> class implements the RPC API for account history. </para>    </briefdescription>
    <detaileddescription>
<para>This API contains methods to access account histories </para>    </detaileddescription>
    <location file="libraries/app/include/graphene/app/api.hpp" line="117" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="116" bodyend="220"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1history__api_1a59a2a38b1c81a9e5fed85ea79f25bc38" prot="private" virt="non-virtual"><scope>graphene::app::history_api</scope><name>_app</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1af5bed60211b4dbc03bd69cfee1448848" prot="private" virt="non-virtual"><scope>graphene::app::history_api</scope><name>database_api</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1a70b3af7edeea81534a4db9e83b2cbd88" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_account_history</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1aa089e3b3c533e4f195c6af5c230c8a3b" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_account_history_by_operations</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1a67e565b2a56a736c31215fb96d216fc9" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_account_history_operations</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1a1574597fa10804bf328b89c12f6f7a9f" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_fill_order_history</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1ab5e379a09632a3e215554cd9ef37dcd9" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_market_history</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1a3cb82a7bb879b9f967665d69fd90c67d" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_market_history_buckets</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1aeed223d6c126ffd0b2a388ae3e026a90" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>get_relative_account_history</name></member>
      <member refid="classgraphene_1_1app_1_1history__api_1ad034d3e3420e431ad72159b9f3bd807a" prot="public" virt="non-virtual"><scope>graphene::app::history_api</scope><name>history_api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
