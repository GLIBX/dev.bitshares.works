<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1execute__bid__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::execute_bid_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1chain_1_1base__operation" prot="public" virt="non-virtual">graphene::chain::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1execute__bid__operation_1_1fee__parameters__type" prot="public">graphene::chain::execute_bid_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1execute__bid__operation_1a45184a7b828a610f6f44e3717191b312" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::execute_bid_operation::bidder</definition>
        <argsstring></argsstring>
        <name>bidder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="208" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1execute__bid__operation_1a9ac0b6a726f6ebd2601d859b423b7067" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::execute_bid_operation::debt</definition>
        <argsstring></argsstring>
        <name>debt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="209" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1execute__bid__operation_1a21bc5f02c5c2c9fc37f6eed7ba73df90" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::execute_bid_operation::collateral</definition>
        <argsstring></argsstring>
        <name>collateral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="210" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1execute__bid__operation_1a8bdf12f0fb04cd0947a61a6e9e424f2e" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::execute_bid_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="211" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1execute__bid__operation_1ac12239b87b164a4e2670fceb7f4d81c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::execute_bid_operation::execute_bid_operation</definition>
        <argsstring>()</argsstring>
        <name>execute_bid_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="204" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1execute__bid__operation_1a3c1140a50999769b332acf0e8955f754" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::execute_bid_operation::execute_bid_operation</definition>
        <argsstring>(account_id_type a, asset d, asset c)</argsstring>
        <name>execute_bid_operation</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1asset" kindref="compound">asset</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="205" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="205" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1execute__bid__operation_1a59bbbf83fca4198dde1886a71d18bda0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1a11927fb343f953514ab6235d6e7233ee" kindref="member">account_id_type</ref></type>
        <definition>account_id_type graphene::chain::execute_bid_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="213" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1execute__bid__operation_1a73e0716b21128813d41045566f6d072a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::execute_bid_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="214" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1execute__bid__operation_1a28eeb8984e60c21879874b84f7db41ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1chain_1ab4bea4aef5fe40c66b42537da931bffe" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::execute_bid_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1execute__bid__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>This is a virtual operation; there is no fee. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="217" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual operation that is created while reviving a bitasset from collateral bids. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1865">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1864">
        <label>graphene::chain::execute_bid_operation</label>
        <link refid="structgraphene_1_1chain_1_1execute__bid__operation"/>
        <childnode refid="1865" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1867">
        <label>graphene::chain::base_operation</label>
        <link refid="structgraphene_1_1chain_1_1base__operation"/>
      </node>
      <node id="1868">
        <label>graphene::chain::asset</label>
        <link refid="structgraphene_1_1chain_1_1asset"/>
        <childnode refid="1869" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1866">
        <label>graphene::chain::execute_bid_operation</label>
        <link refid="structgraphene_1_1chain_1_1execute__bid__operation"/>
        <childnode refid="1867" relation="public-inheritance">
        </childnode>
        <childnode refid="1868" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>debt</edgelabel>
          <edgelabel>collateral</edgelabel>
        </childnode>
      </node>
      <node id="1869">
        <label>safe&lt; int64_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/protocol/market.hpp" line="201" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/market.hpp" bodystart="200" bodyend="218"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a45184a7b828a610f6f44e3717191b312" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>bidder</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a8947f5ff3ea0458c7fe981b5bb9e82b7" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a28eeb8984e60c21879874b84f7db41ad" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a18b678eb05bc5b30d75f10b398c07a91" prot="public" virt="non-virtual" ambiguityscope="graphene::chain::base_operation::"><scope>graphene::chain::execute_bid_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a21bc5f02c5c2c9fc37f6eed7ba73df90" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>collateral</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a9ac0b6a726f6ebd2601d859b423b7067" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>debt</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1ac12239b87b164a4e2670fceb7f4d81c8" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>execute_bid_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a3c1140a50999769b332acf0e8955f754" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>execute_bid_operation</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a8bdf12f0fb04cd0947a61a6e9e424f2e" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a59bbbf83fca4198dde1886a71d18bda0" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1a1d398b2f68e1dca5f453b86655a64c41" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1ac7e2861a01bbaef8fbe5c5dcf5e73b38" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1base__operation_1aff6e2d2b66117c8c87f6a6e7e7ddba1f" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1chain_1_1execute__bid__operation_1a73e0716b21128813d41045566f6d072a" prot="public" virt="non-virtual"><scope>graphene::chain::execute_bid_operation</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
