<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1calc__fee__visitor" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::calc_fee_visitor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1chain_1_1calc__fee__visitor_1a1e7190b06c564ee7cd9c0475f331c2a5" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t graphene::chain::calc_fee_visitor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/fee_schedule.cpp" line="80" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1calc__fee__visitor_1a7b445894499d6e2b66cf2248996f4b0c" prot="public" static="no" mutable="no">
        <type>const <ref refid="structgraphene_1_1chain_1_1fee__schedule" kindref="compound">fee_schedule</ref> &amp;</type>
        <definition>const fee_schedule&amp; graphene::chain::calc_fee_visitor::param</definition>
        <argsstring></argsstring>
        <name>param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/fee_schedule.cpp" line="82" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1calc__fee__visitor_1adbac5fae750e3dbb99b5ca877ce793a1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int graphene::chain::calc_fee_visitor::current_op</definition>
        <argsstring></argsstring>
        <name>current_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/fee_schedule.cpp" line="83" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1calc__fee__visitor_1aa5eeece7a2a4b556566de0135ac5f28f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::calc_fee_visitor::calc_fee_visitor</definition>
        <argsstring>(const fee_schedule &amp;p, const operation &amp;op)</argsstring>
        <name>calc_fee_visitor</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1fee__schedule" kindref="compound">fee_schedule</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="group__operations_1gac47176a69808d4ca769092ca957db937" kindref="member">operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/fee_schedule.cpp" line="84" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1calc__fee__visitor_1ad3af5c461e8c5d4b53ca4001a3a9ba3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OpType</type>
          </param>
        </templateparamlist>
        <type><ref refid="structgraphene_1_1chain_1_1calc__fee__visitor_1a1e7190b06c564ee7cd9c0475f331c2a5" kindref="member">result_type</ref></type>
        <definition>result_type graphene::chain::calc_fee_visitor::operator()</definition>
        <argsstring>(const OpType &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const OpType &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/fee_schedule.cpp" line="87" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="87" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1484">
        <label>graphene::chain::calc_fee_visitor</label>
        <link refid="structgraphene_1_1chain_1_1calc__fee__visitor"/>
        <childnode refid="1485" relation="usage">
          <edgelabel>param</edgelabel>
        </childnode>
      </node>
      <node id="1486">
        <label>flat_set&lt; fee_parameters &gt;</label>
      </node>
      <node id="1485">
        <label>graphene::chain::fee_schedule</label>
        <link refid="structgraphene_1_1chain_1_1fee__schedule"/>
        <childnode refid="1486" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/protocol/fee_schedule.cpp" line="79" column="1" bodyfile="libraries/chain/protocol/fee_schedule.cpp" bodystart="78" bodyend="98"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1calc__fee__visitor_1aa5eeece7a2a4b556566de0135ac5f28f" prot="public" virt="non-virtual"><scope>graphene::chain::calc_fee_visitor</scope><name>calc_fee_visitor</name></member>
      <member refid="structgraphene_1_1chain_1_1calc__fee__visitor_1adbac5fae750e3dbb99b5ca877ce793a1" prot="public" virt="non-virtual"><scope>graphene::chain::calc_fee_visitor</scope><name>current_op</name></member>
      <member refid="structgraphene_1_1chain_1_1calc__fee__visitor_1ad3af5c461e8c5d4b53ca4001a3a9ba3e" prot="public" virt="non-virtual"><scope>graphene::chain::calc_fee_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1calc__fee__visitor_1a7b445894499d6e2b66cf2248996f4b0c" prot="public" virt="non-virtual"><scope>graphene::chain::calc_fee_visitor</scope><name>param</name></member>
      <member refid="structgraphene_1_1chain_1_1calc__fee__visitor_1a1e7190b06c564ee7cd9c0475f331c2a5" prot="public" virt="non-virtual"><scope>graphene::chain::calc_fee_visitor</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
