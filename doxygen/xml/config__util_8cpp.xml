<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="config__util_8cpp" kind="file" language="C++">
    <compoundname>config_util.cpp</compoundname>
    <includes refid="config__util_8hpp" local="no">graphene/app/config_util.hpp</includes>
    <includes refid="config_8hpp" local="no">graphene/chain/config.hpp</includes>
    <includes local="no">fc/reflect/variant.hpp</includes>
    <includes local="no">fc/string.hpp</includes>
    <includes local="no">fc/exception/exception.hpp</includes>
    <includes local="no">fc/log/console_appender.hpp</includes>
    <includes local="no">fc/log/file_appender.hpp</includes>
    <includes local="no">fc/log/logger_config.hpp</includes>
    <includes local="no">boost/property_tree/ptree.hpp</includes>
    <includes local="no">boost/property_tree/ini_parser.hpp</includes>
    <includes local="no">boost/algorithm/string/predicate.hpp</includes>
    <includes local="no">boost/algorithm/string/split.hpp</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="378">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="363">
        <label>libraries/app/config_util.cpp</label>
        <link refid="config__util_8cpp"/>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>boost/property_tree/ini_parser.hpp</label>
      </node>
      <node id="365">
        <label>fc/filesystem.hpp</label>
      </node>
      <node id="364">
        <label>graphene/app/config_util.hpp</label>
        <link refid="config__util_8hpp"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>fstream</label>
      </node>
      <node id="366">
        <label>boost/program_options.hpp</label>
      </node>
      <node id="376">
        <label>boost/algorithm/string/predicate.hpp</label>
      </node>
      <node id="377">
        <label>boost/algorithm/string/split.hpp</label>
      </node>
      <node id="373">
        <label>fc/log/logger_config.hpp</label>
      </node>
      <node id="368">
        <label>fc/reflect/variant.hpp</label>
      </node>
      <node id="370">
        <label>fc/exception/exception.hpp</label>
      </node>
      <node id="372">
        <label>fc/log/file_appender.hpp</label>
      </node>
      <node id="374">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="371">
        <label>fc/log/console_appender.hpp</label>
      </node>
      <node id="369">
        <label>fc/string.hpp</label>
      </node>
      <node id="367">
        <label>graphene/chain/config.hpp</label>
        <link refid="config_8hpp"/>
      </node>
    </incdepgraph>
    <innerclass refid="classdeduplicator" prot="public">deduplicator</innerclass>
    <innernamespace refid="namespacegraphene">graphene</innernamespace>
    <innernamespace refid="namespacegraphene_1_1app">graphene::app</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="config__util_8cpp_1ae70621a2cd2aded23a05ead4b499e51c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_default_logging_config_to_stream</definition>
        <argsstring>(std::ostream &amp;out)</argsstring>
        <name>write_default_logging_config_to_stream</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="72" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="72" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1a82371f3717f0f350b83402819c18eaa0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fc::optional&lt; fc::logging_config &gt;</type>
        <definition>static fc::optional&lt;fc::logging_config&gt; load_logging_config_from_ini_file</definition>
        <argsstring>(const fc::path &amp;config_ini_filename)</argsstring>
        <name>load_logging_config_from_ini_file</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>config_ini_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="118" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="118" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1a193fde9fc950db2b1ccfd5582bb70d46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::shared_ptr&lt; bpo::option_description &gt;</type>
        <definition>static const boost::shared_ptr&lt;bpo::option_description&gt; new_option_description</definition>
        <argsstring>(const std::string &amp;name, const bpo::value_semantic *value, const std::string &amp;description)</argsstring>
        <name>new_option_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const bpo::value_semantic *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="200" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1ad92a1ecf4ec536a01525c3261ce4f703" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void load_config_file</definition>
        <argsstring>(const fc::path &amp;config_ini_path, const bpo::options_description &amp;cfg_options, bpo::variables_map &amp;options)</argsstring>
        <name>load_config_file</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>config_ini_path</declname>
        </param>
        <param>
          <type>const bpo::options_description &amp;</type>
          <declname>cfg_options</declname>
        </param>
        <param>
          <type>bpo::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="208" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="208" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1ad0f1c060af9360b032eeceeda99b9bd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool load_logging_config_file</definition>
        <argsstring>(const fc::path &amp;config_ini_path)</argsstring>
        <name>load_logging_config_file</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>config_ini_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="225" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="225" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1ad5de2db1241fe05f92c666efac7e12f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void create_new_config_file</definition>
        <argsstring>(const fc::path &amp;config_ini_path, const fc::path &amp;data_dir, const bpo::options_description &amp;cfg_options)</argsstring>
        <name>create_new_config_file</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>config_ini_path</declname>
        </param>
        <param>
          <type>const fc::path &amp;</type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>const bpo::options_description &amp;</type>
          <declname>cfg_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="244" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="244" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="config__util_8cpp_1a2875774e5420723dad0aee83aa379ee8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void create_logging_config_file</definition>
        <argsstring>(const fc::path &amp;config_ini_path, const fc::path &amp;data_dir)</argsstring>
        <name>create_logging_config_file</name>
        <param>
          <type>const fc::path &amp;</type>
          <declname>config_ini_path</declname>
        </param>
        <param>
          <type>const fc::path &amp;</type>
          <declname>data_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/config_util.cpp" line="292" column="1" bodyfile="libraries/app/config_util.cpp" bodystart="292" bodyend="303"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/app/config_util.cpp"/>
  </compounddef>
</doxygen>
