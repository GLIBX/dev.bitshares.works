<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc" kind="namespace" language="C++">
    <compoundname>fc</compoundname>
    <innerclass refid="structfc_1_1get__typename_3_01graphene_1_1chain_1_1extension_3_01_t_01_4_01_4" prot="public">fc::get_typename&lt; graphene::chain::extension&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1graphene__extension__from__variant__visitor" prot="public">fc::graphene_extension_from_variant_visitor</innerclass>
    <innerclass refid="structfc_1_1graphene__extension__to__variant__visitor" prot="public">fc::graphene_extension_to_variant_visitor</innerclass>
    <innernamespace refid="namespacefc_1_1ecc">fc::ecc</innernamespace>
    <innernamespace refid="namespacefc_1_1raw">fc::raw</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1a47fa061860c3a8cd3b9fee8f72a77e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::address &amp;var, fc::variant &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1address" kindref="compound">graphene::chain::address</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/address.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1ac51d33921718f83bdf08a5f3e79f18ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::address &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1address" kindref="compound">graphene::chain::address</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/address.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1af8e78e7fcb3f5ee9434be5962162b5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::extension&lt; T &gt; &amp;value, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1extension" kindref="compound">graphene::chain::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/ext.hpp" line="164" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/ext.hpp" bodystart="164" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a1d1473e899c03aa0e6e03c3568388fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::extension&lt; T &gt; &amp;value, fc::variant &amp;var, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extension" kindref="compound">graphene::chain::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/ext.hpp" line="197" column="1" bodyfile="libraries/chain/include/graphene/chain/protocol/ext.hpp" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1ace540cfdc3d29ed05d2567a61fe9cf7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::public_key_type &amp;var, fc::variant &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">graphene::chain::public_key_type</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="314" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a5b6fcb2ecb02308442e416982c588653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::public_key_type &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1public__key__type" kindref="compound">graphene::chain::public_key_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="315" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a4deb3aa578b48679e50c6f1488871111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::extended_public_key_type &amp;var, fc::variant &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__public__key__type" kindref="compound">graphene::chain::extended_public_key_type</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="316" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1aaac5b20265d20c71ec24e3e9f94c3ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::extended_public_key_type &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1extended__public__key__type" kindref="compound">graphene::chain::extended_public_key_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="317" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a8c212c703a61b700343ec341bb7c242f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::extended_private_key_type &amp;var, fc::variant &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">graphene::chain::extended_private_key_type</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="318" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a1c2f3725f5f595da305c3477af9c6780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::extended_private_key_type &amp;vo, uint32_t max_depth=2)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1extended__private__key__type" kindref="compound">graphene::chain::extended_private_key_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/types.hpp" line="319" column="1" bodyfile="libraries/chain/protocol/types.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1afacb31a7cdd5c97ef591f3544896182b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::vote_id_type &amp;var, fc::variant &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">graphene::chain::vote_id_type</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1af73853a0b3b473586d002b7488e4a943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::vote_id_type &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">graphene::chain::vote_id_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/protocol/vote.hpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a641ae590e5683fb13554ad3149df2f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::pts_address &amp;var, fc::variant &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1pts__address" kindref="compound">graphene::chain::pts_address</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>fc::variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/pts_address.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a71b7a0e0ab8cb2225fd1a8537346b5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const fc::variant &amp;var, graphene::chain::pts_address &amp;vo, uint32_t max_depth=1)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const fc::variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1pts__address" kindref="compound">graphene::chain::pts_address</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/pts_address.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a8f00220d9f3305ea5668ad94bb58098c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::address &amp;var, variant &amp;vo, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1address" kindref="compound">graphene::chain::address</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/address.cpp" line="104" column="1" bodyfile="libraries/chain/protocol/address.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a4ec0a269f0a24c2ef99692c47ab8430d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const variant &amp;var, graphene::chain::address &amp;vo, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1address" kindref="compound">graphene::chain::address</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/address.cpp" line="108" column="1" bodyfile="libraries/chain/protocol/address.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1ae7fca6ee46d9114ef912988f5c75427d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::vote_id_type &amp;var, variant &amp;vo, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">graphene::chain::vote_id_type</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/vote.cpp" line="41" column="1" bodyfile="libraries/chain/protocol/vote.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a7c69842d0512d19fedada08dc5d0d711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const variant &amp;var, graphene::chain::vote_id_type &amp;vo, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1vote__id__type" kindref="compound">graphene::chain::vote_id_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/protocol/vote.cpp" line="46" column="1" bodyfile="libraries/chain/protocol/vote.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a956076c9a19a34f489a311fe4e62eaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const graphene::chain::pts_address &amp;var, variant &amp;vo, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="structgraphene_1_1chain_1_1pts__address" kindref="compound">graphene::chain::pts_address</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/pts_address.cpp" line="92" column="1" bodyfile="libraries/chain/pts_address.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a88227672fa8bd40299befe1f231610dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const variant &amp;var, graphene::chain::pts_address &amp;vo, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1chain_1_1pts__address" kindref="compound">graphene::chain::pts_address</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/pts_address.cpp" line="96" column="1" bodyfile="libraries/chain/pts_address.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1a5c3f07e0187947e20a5ce2f97f9815f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::to_variant</definition>
        <argsstring>(const account_multi_index_type &amp;accts, variant &amp;vo, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1chain_1a2cb69664c48f3d41eb5ac8b6bc4847cc" kindref="member">account_multi_index_type</ref> &amp;</type>
          <declname>accts</declname>
        </param>
        <param>
          <type>variant &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/wallet/include/graphene/wallet/wallet.hpp" line="36" column="1" bodyfile="libraries/wallet/wallet.cpp" bodystart="4715" bodyend="4718"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1ad381cfba18e8742b3ccab06107f55d4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::from_variant</definition>
        <argsstring>(const variant &amp;var, account_multi_index_type &amp;vo, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const variant &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a2cb69664c48f3d41eb5ac8b6bc4847cc" kindref="member">account_multi_index_type</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/wallet/include/graphene/wallet/wallet.hpp" line="37" column="1" bodyfile="libraries/wallet/wallet.cpp" bodystart="4720" bodyend="4724"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/chain/include/graphene/chain/protocol/address.hpp" line="32" column="1"/>
  </compounddef>
</doxygen>
